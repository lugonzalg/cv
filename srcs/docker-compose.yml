services:
  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - webnet

  backend:
    build: ./backend
    container_name: backend
    networks:
      - webnet
    expose:
      - 8000
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/app
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet

  backend:
    build: ./backend
    container_name: backend
    networks:
      - webnet
    ports:
      - 8000:8000

  nginx:
    image: nginx:mainline-alpine3.20-slim
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - webnet
    expose:
      - 3000
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - webnet
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    restart: unless-stopped
networks:
  webnet:

volumes:
  db-data:
